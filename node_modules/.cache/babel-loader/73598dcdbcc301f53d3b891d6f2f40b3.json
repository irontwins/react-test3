{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\react-test3\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([]); // const [dollar, setDollars] = useState(0);\n\n  const onClick = () => {\n    console.log(1 / coins.quotes.USD.price * 20);\n  };\n\n  useEffect(() => {\n    fetch(\"https://api.coinpaprika.com/v1/tickers/btc-bitcoin\").then(response => response.json()).then(json => {\n      setCoins(json);\n      setLoading(false);\n    });\n  }, []); // console.log(coins.quotes.USD.price);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCF54\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"\\uB85C\\uB529\\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this) : `${coins.name}:$${coins.quotes.USD.price}`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"USD\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"\\uBCC0\\uD658\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Tn8YJmBWg1hxuNkBzLykOQO7byg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/dev/react-test3/src/App.js"],"names":["useState","useEffect","App","loading","setLoading","coins","setCoins","onClick","console","log","quotes","USD","price","fetch","then","response","json","name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,6BAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAGb;;AACA,QAAMO,OAAO,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAEJ,KAAK,CAACK,MAAN,CAAaC,GAAb,CAAiBC,KAAnB,GAAyB,EAArC;AACA,GAFF;;AAGAX,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAU;AAAEV,MAAAA,QAAQ,CAACU,IAAD,CAAR;AAAgBZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAoB,KAFtD;AAGD,GAJQ,EAIN,EAJM,CAAT,CAPa,CAcb;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGMD,OAAO,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,GACN,GAAEE,KAAK,CAACY,IAAK,KAAIZ,KAAK,CAACK,MAAN,CAAaC,GAAb,CAAiBC,KAAM,EAJ/C,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAQ,MAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7BQL,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from 'react/cjs/react.development';\n\nfunction App() {  \n  const [loading, setLoading] = useState(true);  \n  const [coins, setCoins] = useState([]);\n  // const [dollar, setDollars] = useState(0);\n  const onClick = () => {\n    console.log(1/coins.quotes.USD.price*20);\n   };\n  useEffect(()=>{\n    fetch(\"https://api.coinpaprika.com/v1/tickers/btc-bitcoin\")    \n    .then((response) => response.json())\n    .then((json) => { setCoins(json); setLoading(false); } );\n  }, [])\n\n  \n  // console.log(coins.quotes.USD.price);\n  return (\n    <div>\n      <h1>코인</h1>\n        { \n          loading? <strong>로딩중...</strong> : \n          `${coins.name}:$${coins.quotes.USD.price}`\n        }\n        \n        {/* {coins.map((coin, index) => { return <option key={index}>{coin.name}({coin.symbol}: ${coin.quotes.USD.price} USD</option> } )}         */}\n        <br />\n        <input type=\"text\" placeholder=\"USD를 입력하세요\" />\n        <button onClick={onClick}>변환</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}